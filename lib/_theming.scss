$themes: (
  default: (
    base:   $c-blue,
    accent: $c-orange
  ),
  functional-swift: (
    base: map-get(map-get($c-book, functional-swift), stop),
    accent: map-get(map-get($c-book, functional-swift), start)
  ),
  core-data: (
    base: map-get(map-get($c-book, core-data), stop),
    accent: map-get(map-get($c-book, core-data), start)
  ),
  advanced-swift: (
    base: map-get(map-get($c-book, advanced-swift), stop),
    accent: map-get(map-get($c-book, advanced-swift), start)
  ),
  optimizing-collections: (
    base: map-get(map-get($c-book, optimizing-collections), stop),
    accent: map-get(map-get($c-book, optimizing-collections), start)
  )
);

@function theme-color($theme, $type) {
  @return map-get(map-get($themes, $theme), $type);
}

//
// Theme Styling Mixin
//
@mixin theme-styling {

  // Save the parent selector (if any)
  $parent: &;

  // Iterate through the themes
  @each $theme-name, $theme-colors in $themes {

    // Always set the selector at root level…
    @at-root {

      // …but include the parent (if any), so the mixin
      // can be called both at root and selector level.
      //                  |
      //                  ↓
      .t-#{$theme-name} #{$parent} {
        $_base:   map-get($theme-colors, base) !global;
        $_accent: map-get($theme-colors, accent) !global;
        @content;
      }
    }

  }
}
