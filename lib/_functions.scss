// From http://hugogiraudel.com/2014/01/13/sass-string-replacement-function/
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function strip-units($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

@function em($pxval, $base: $em-base) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}

@function gray($percentage) {
  @return hsl(0, 0%, $percentage);
}

// https://github.com/adambom/Sass-Math/blob/master/math.scss
@function power ($x, $n) {
  $ret: 1;

  @if $n > 0 {
    @for $i from 1 through $n {
      $ret: $ret * $x;
    }
  }
  @elseif $n < 0 {
    @for $i from $n to 0 {
      $ret: $ret / $x;
    }
  }

  @return $ret;
}

@function modular($factor) {
  @return $modular-scale-base * power($modular-scale-ratio, $factor);
}

@function double($number)    { @return $number * 2; }
@function quadruple($number) { @return $number * 4; }
@function half($number)      { @return $number / 2; }
@function quarter($number)   { @return $number / 4; }
