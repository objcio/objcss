@function arrow-pattern($fill: 'none', $arrows: 'none', $opacity: 1) {
  $pattern: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 240"><g fill="none" fill-rule="evenodd"><path fill="' + $fill + '" d="M0 0h300v240H0z"/><path fill="' + $arrows + '" fill-opacity="' + $opacity + '" d="M83 53l-5 4.955L56 35.5V93h-7V35.5L27 57.955 22 53l30.5-31L83 53zm66 15l-5-4.955L122 85.5V28h-7v57.5L93 63.045 88 68l30.5 31L149 68zm63 104l-5 4.955-22-22.455V212h-7v-57.5l-22 22.455-5-4.955 30.5-31 30.5 31zm66 15l-5-4.955-22 22.455V147h-7v57.5l-22-22.455-5 4.955 30.5 31 30.5-31z"/></g></svg>';
  @return svg-uri($pattern);
}

$arrow-pattern-shade: arrow-pattern($arrows: #000000, $opacity: 0.065);
$arrow-pattern-white: arrow-pattern($arrows: #FFFFFF);
$arrow-pattern-light: arrow-pattern($arrows: #FFFFFF, $opacity: 0.2);

// Base arrow pattern
%pattern {
  background-size:       em(300) em(240);
  background-position:   center -1em;
  background-attachment: fixed;
}

// 1. Solid background patterns
// 1.1. Blue background, darker blue arrows.
.pattern-blue {
  @extend %pattern;
  background-color: $c-blue;
  background-image: arrow-pattern($arrows: $c-blue-shade);
}
// 1.2. Dark blue background, blue arrows
.pattern-blue-reverse {
  @extend %pattern;
  background-color: $c-blue-shade;
  background-image: arrow-pattern($arrows: $c-blue);
}
.pattern-orange {
  @extend %pattern;
  background-color: $c-orange;
  background-image: arrow-pattern($arrows: $c-orange-dark);
}
.pattern-orange-reverse {
  @extend %pattern;
  background-color: $c-orange-dark;
  background-image: arrow-pattern($arrows: $c-orange);
}


// 2. Arrows used to build patterns over another background
// 2.1. Black translucent arrows
.pattern-shade {
  @extend %pattern;
  background-image: $arrow-pattern-shade;
}
.pattern-shade-darker {
  @extend %pattern;
  background-image: arrow-pattern($arrows: #000000, $opacity: 0.2);
}

// 2.2. White translucent
.pattern-light {
  @extend %pattern;
  background-image: $arrow-pattern-light;
}
// 2.3. White arrows
.pattern-white {
  @extend %pattern;
  background-image: $arrow-pattern-white;
}



//
// 3. Gradient patterns
//
.pattern-gradient {
  background-size:       em(300) em(240), auto auto;
  background-position:   center -1em,     top left;
  background-attachment: fixed,           scroll;

  @mixin pattern-gradient($start, $stop) {
    background-color: $stop;
    background-image: $arrow-pattern-shade, linear-gradient($start, $stop);
  }

  // 3.1 For Swift Talk
  &--swifttalk {
    @include pattern-gradient(map-get($c-swifttalk, start), map-get($c-swifttalk, stop));
  }

  &--gray-white {
    background-color: white;
    background-image: $arrow-pattern-white, linear-gradient(gray(95%), white 20em, white);
  }

  // 3.2. For each book
  @each $book, $_ in $book-colors {
    &--#{$book} {
      @include pattern-gradient(book-color($book, 'top'), book-color($book, 'bottom'));
    }
  }

}


//
// 4. Pattern Illustration
//
.pattern-illustration {
  background-size: 50%;
  background-attachment: fixed;
  background-color: #F2F4F2;
}