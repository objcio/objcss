$arrow-pattern-shade: arrow-pattern($arrows: #000000, $opacity: 0.065);
$arrow-pattern-white: arrow-pattern($arrows: #FFFFFF);
$arrow-pattern-light: arrow-pattern($arrows: #FFFFFF, $opacity: 0.2);

// Base arrow pattern
%pattern {
  background-size:       em(300) em(240);
  background-position:   center -1em;
  background-attachment: fixed;
}

// 1. Solid background patterns
// 1.1. Blue background, darker blue arrows.
.pattern-blue {
  @extend %pattern;
  background-color: $c-blue;
  background-image: arrow-pattern($arrows: $c-blue-shade);
}
// 1.2. Dark blue background, blue arrows
.pattern-blue-reverse {
  @extend %pattern;
  background-color: $c-blue-shade;
  background-image: arrow-pattern($arrows: $c-blue);
}
.pattern-orange {
  @extend %pattern;
  background-color: $c-orange;
  background-image: arrow-pattern($arrows: $c-orange-dark);
}
.pattern-orange-reverse {
  @extend %pattern;
  background-color: $c-orange-dark;
  background-image: arrow-pattern($arrows: $c-orange);
}


// 2. Arrows used to build patterns over another background
// 2.1. Black translucent arrows
.pattern-shade {
  @extend %pattern;
  background-image: $arrow-pattern-shade;
}
// 2.2. White translucent
.pattern-light {
  @extend %pattern;
  background-image: $arrow-pattern-light;
}
// 2.3. White arrows
.pattern-white {
  @extend %pattern;
  background-image: $arrow-pattern-white;
}



//
// 3. Gradient patterns
//
.pattern-gradient {
  background-size:       em(300) em(240), auto auto;
  background-position:   center -1em,     top left;
  background-attachment: fixed,           scroll;

  @mixin pattern-gradient($start, $stop) {
    background-color: $stop;
    background-image: $arrow-pattern-shade, linear-gradient($start, $stop);
  }

  // 3.1 For Swift Talk
  &--swifttalk {
    @include pattern-gradient(map-get($c-swifttalk, start), map-get($c-swifttalk, stop));
  }

  &--gray-white {
    background-color: white;
    background-image: $arrow-pattern-white, linear-gradient(gray(95%), white 20em, white);
  }

  // 3.2. For each book
  @each $book, $_ in $book-colors {
    &--#{$book} {
      @include pattern-gradient(book-color($book, 'top'), book-color($book, 'bottom'));
    }
  }

}
