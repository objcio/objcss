.c-text {
  color: gray(25%);

  &:not(.c-text--padded) > *:first-child {
    margin-top: 0;
    padding-top: 0;
  }

  a {
    color: color('blue');
    @include theming {
      color: theming('main');
    }
    text-decoration: none;
    &:hover, &:focus {
      border-bottom: solid 1px;
    }
    &:focus {
      outline: none;
    }
  }

  &.c-text--visited-links a:visited:not([href^="#"]) {
    color: color('purple');
  }

  h1, h2, h3, h4 {
    font-weight: bold;
    line-height: 1.2;
    code {
      font-weight: normal;
    }
    + p {
      margin-top: 1em;
    }
  }

  h1 {
    font-size: modular(4);
    padding-top: modular(4);
    max-width: ($text-width / modular(4) * 1em);
  }

  h2 {
    font-size: modular(3);
    padding-top: modular(4);
    max-width: ($text-width / modular(3) * 1em);
  }

  h3 {
    font-size: modular(2);
    padding-top: modular(4);
    max-width: ($text-width / modular(2) * 1em);
  }

  h4 {
    font-size: modular(1);
    padding-top: modular(4);
    font-weight: bold;
    max-width: ($text-width / modular(1) * 1em);
  }

  h5, p, div.figure, figure {
    line-height: 1.5;
    margin-top: 1.25em;
    max-width: $text-width;

    .caption {
        max-width: 100%;
        font-weight: bold;
        font-size: .8em;
    }
  }

  h5 {
    font-weight: bold;
  }

  img {
    display: block;
    max-width: 100%;
    height: auto;
  }

  // don't center if direct descendant
  * img {
    @include center;
    + * { text-align: center; }
  }

  video {
    max-width: 100%;
    margin-top: 1.25em;
  }

  > hr {
    max-width: $text-width;
    margin: 2.5em 0;
    border: none;
    text-align: center;
    &:before {
      content:"\2042";
      color: color('blue');
      @include theming {
        color: theming('main')
      }
    }
  }

  blockquote {
    max-width: $text-width;
    color: gray(35%);
    border-left: solid 2px color('blue');
    @include theming {
      border-left-color: theming('main')
    }
    padding-left: 1em;
    margin-top: 1em;
    margin-bottom: 1em;
  }

  ul, ol {
    max-width: $text-width;
    margin-top: 1.45em;
    margin-bottom: 1.45em;
    line-height: 1.45;
  }

  ul {
    padding-left: 1.1em;
  }

  ul > li {
    list-style: disc;
  }

  ol {
    padding-left: 1.4em;
  }

  ol > li {
    list-style: decimal;
  }

  li + li {
    margin-top: .45em;
  }

  strong {
    font-weight: bold;
  }

  em {
    font-style: italic;
  }

  sup {
    font-size: modular(-2);
    padding-left: .2em;
    vertical-align: super;
  }



  /* Inline Code */

  p, li, th, td {
    > code {
      background: $code-inline-bg;
      border-radius: $code-radius;
      padding: .1em .25em;
      color: #222222;
      font-size: .9em;
      word-wrap: break-word;
    }
  }



  /* Code Blocks */

  //.c-text--preview .code is used in pasted-in code previews

  pre, code,
  &--preview .code  {
    max-width: 100%;
  }

  pre,
  &--preview .code {
    font-family: $type-mono;

    font-size: .85em;
    position: relative;

    display: inline-block;

    max-width: 100%;
    margin: (1em/.85) 0;
    padding: (1em / .85);
    line-height: 1.25;
    color: gray(10%);

    border-radius: $code-radius;
    background: $code-block-bg;

    @include bp-upto(l) {
      width: 100%;
    }

    @include bp-from(l) {
      margin-left: (-1em/.85);
      margin-right: (-1em/.85);
      min-width: ($text-width / .85 + (2em/.85));
    }
  }

  // Prevent code blocks from going out of bounds
  pre > code,
  &--preview .code {
    display: block;
    overflow-x: auto;
    overflow-y: hidden;
  }

  &--preview .code {
    .output {
        font-family: $type-mono;
        margin-left: 0em;
        margin-right: 1em;
        margin-bottom: 1em;
        margin-top: 6pt;
        max-width: 100%;
        width: -webkit-fit-content;
        width: fit-content;
        line-height: 90%;
    }

    .line {
        display: block;
        padding: 0px;
        margin: 0px;
        padding-left: 1.5em;
        text-indent: -1.5em;
    }

    .line.eval {
        margin-top: 0.5em;
        margin-bottom: 6pt;
    }
    .line.eval::before {
        content: "â–º ";
    }

    .output .line {
        white-space: pre-wrap;
        width: -webkit-fit-content;
        width: fit-content;
    }

    .line.i0 { margin-left: 0em; }
    .line.i1 { margin-left: 1.5em; }
    .line.i2 { margin-left: 3em; }
    .line.i3 { margin-left: 4.5em; }
    .line.i4 { margin-left: 6em; }
    .line.i5 { margin-left: 7.5em; }
    .line.i6 { margin-left: 9em; }
    .line.i7 { margin-left: 10.5em; }
    .line.i8 { margin-left: 12em; }
    .line.i9 { margin-left: 13.5em; }
    .line.i10 { margin-left: 15em; }
    .line.i11 { margin-left: 16.5em; }
    .line.i12 { margin-left: 18em; }


    /*.hll { background-color: #ffffcc }*/
    .c { color: #B2B2B2 } /* Comment */
    /*.err { color: #000000 } *//* Error */
    .k { color: #097DAB; } /* Keyword */
    /*.l { color: #1C01CE }  Literal */
    /*.n { color: #000000 } *//* Name */
    /*.o { color: #000000 } *//* Operator */
    .cm { color: #B2B2B2 } /* Comment.Multiline */
    .cp { color: #B2B2B2 } /* Comment.Preproc */
    .c1 { color: #B2B2B2 } /* Comment.Single */
    .cs { color: #B2B2B2 } /* Comment.Special */
    .kc { color: #097DAB; } /* Keyword.Constant */
    .kd { color: #097DAB; } /* Keyword.Declaration */
    .kn { color: #097DAB; } /* Keyword.Namespace */
    .kp { color: #097DAB; } /* Keyword.Pseudo */
    .kr { color: #097DAB; } /* Keyword.Reserved */
    .kt { color: #097DAB; } /* Keyword.Type */
    /*.ld { color: #1C01CE } *//* Literal.Date */
    /*.m { color: #1C01CE } *//* Literal.Number */
    .s { color: #004E75 } /* Literal.String */
    /*.na { color: #836C28 } *//* Name.Attribute */
    .nb { color: #10B6AA; } /* Name.Builtin */
    /*.nc { color: #3F6E75 } *//* Name.Class */
    /*.no { color: #000000 } *//* Name.Constant */
    /*.nd { color: #000000 } *//* Name.Decorator */
    /*.ni { color: #000000 } *//* Name.Entity */
    /*.ne { color: #000000 } *//* Name.Exception */
    /*.nf { color: #000000 } *//* Name.Function */
    /*.nl { color: #000000 } *//* Name.Label */
    /*.nn { color: #000000 } *//* Name.Namespace */
    /*.nx { color: #000000 } *//* Name.Other */
    /*.py { color: #000000 } *//* Name.Property */
    /*.nt { color: #000000 } *//* Name.Tag */
    /*.nv { color: #000000 } *//* Name.Variable */
    /*.ow { color: #000000 } *//* Operator.Word */
    /*.mb { color: #1C01CE } *//* Literal.Number.Bin */
    /*.mf { color: #1C01CE } *//* Literal.Number.Float */
    /*.mh { color: #1C01CE } *//* Literal.Number.Hex */
    /*.mi { color: #1C01CE } *//* Literal.Number.Integer */
    /*.mo { color: #1C01CE } *//* Literal.Number.Oct */
    .sb { color: #004E75 } /* Literal.String.Backtick */
    /*.sc { color: #2300CE } *//* Literal.String.Char */
    .sd { color: #004E75 } /* Literal.String.Doc */
    .s2 { color: #004E75 } /* Literal.String.Double */
    .se { color: #004E75 } /* Literal.String.Escape */
    .sh { color: #004E75 } /* Literal.String.Heredoc */
    .si { color: #004E75 } /* Literal.String.Interpol */
    .sx { color: #004E75 } /* Literal.String.Other */
    .sr { color: #004E75 } /* Literal.String.Regex */
    .s1 { color: #004E75 } /* Literal.String.Single */
    .ss { color: #004E75 } /* Literal.String.Symbol */
    /*.bp { color: #5B269A } *//* Name.Builtin.Pseudo */
    /*.vc { color: #000000 } *//* Name.Variable.Class */
    /*.vg { color: #000000 } *//* Name.Variable.Global */
    /*.vi { color: #000000 } *//* Name.Variable.Instance */
    /*.il { color: #1C01CE } *//* Literal.Number.Integer.Long */

    .line .c { /* Comment */
        color: #B2B2B2;
    }
    .line .k { /* Keyword */
        color: #097DAB;
    }
    .line .i { /* Identifier */
    /*    color: #008;*/
    }
    .line .s { /* String */
        color: #004E75;
        white-space: pre-wrap;
    }
    .line .n { /* Integer/Float/etc. literal */
    }

    .line .t { /* Type name */
        color: #10B6AA;
    }
  }


  pre > code:before,
  pre > button {
    font-family: $type-sans;
    text-transform: uppercase;
    font-size: .7em;
    font-weight: bold;
    letter-spacing: .1em;
    line-height: 1;
  }

  pre > button {
    appearance: none;
    background: none;
    padding: 0;
    margin: 0;
    border: none;
    border-radius: none;
    position: absolute;
    top: ((1em / .85) / .7);
    right: ((1em / .85) / .7);
    cursor: pointer;

    color: color('blue');
    &:hover,
    &:focus {
      color: black;
      outline: none;
    }

    @include theming {
      color: theming('main');
      &:hover,
      &:focus {
        color: theming('highlight');
      }
    }


  }

  pre > button + code:before {
    content: "";
  }

  pre > code.json:before {
    content: "JSON" !important;
  }

  pre > code.sql:before {
    content: "SQL" !important;
  }

  pre > code.java:before {
    content: "Java" !important;
  }

  pre > code.objc:before,
  pre > code.objectivec:before {
    content: "Objective-C" !important;
  }

  pre > code.swift:before {
    content: "Swift" !important;
  }

  pre > code.xml:before {
    content: "XML" !important;
  }

  pre > code:before {
    display: block;
    color: gray(65%);
    margin-bottom: (1em / .7);
  }

  /* Tables */

  table {
    max-width: 100%;
    display: block;
    margin-top: 1.45em;
    overflow: scroll;
  }

  thead {
    font-weight: bold;
  }

  th {
    margin-right: 1em;
    text-align: left;
    padding-right:  1em;
    padding-bottom: 1.5em;
  }

  tr {

  }

  td {
    padding-right: 1em;
    padding-bottom: 1em;
  }

  tr {
  }
}

.c-text .footnotes {
  max-width: $text-width;
  hr {
    border: none;
    border-top: solid 1px gray(90%);
    margin: 2em 0 0;
  }

  ol {
    max-width: none;
    font-size: modular(-1);
    color: gray(30%);
  }

  ol:before {
    margin-top: 1em;
    content: "Footnotes";
    display: block;
    font-weight: bold;
  }

  p {
    margin: 0;
    line-height: 1.4;
    color: gray(40%);
    max-width: none;
  }

  li:target,
  li:target p {
    color: gray(15%);
  }

  li {
    margin: 0;
    padding-top: 1em;
  }
}

.c-text .bigfoot-footnote__button:target,
.c-text sup:target,
.c-text .footnotes li:target {
  animation-name: flash;
  animation-duration: 1s;
  animation-fill-mode: both;
}
